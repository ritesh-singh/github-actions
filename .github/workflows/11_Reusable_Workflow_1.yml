# Re-using jobs/steps in multiple workflows.
#
# Eg:- Using one workflow inside job of other workflow
#

# Think re-usable components as a function - taking input and returning output

name: 11 - Reusable workflow
on:
  workflow_call: # can be called from other workflow
    inputs: # if some input needs to be provided from other workflow (like a function call)
      # not reserved, can be anything
      artifact-name:
        description: The name of the deployable artifact files
        required: true
        default: Jar # Give default value, in case required is set to false
        type: string
    outputs: # Passing something back to the calling workflow
         # any name
         result:
           description: The result of deployment
           # this value is taken from the steps of one of these jobs
           value: ${{ jobs.deploy.outputs.outcome }}
#    secrets: # secrets can be also expected instead of inputs
#      some-secret:
#        required: true
jobs:
  deploy:
    outputs:
      outcome: ${{ steps.set-result.outputs.step-result }}
    runs-on: ubuntu-latest
    steps:
      - name: Print artifact name
        run: echo ${{ inputs.artifact-name }}
      - name: Print secret name
        run: echo ${{ secrets.secret-name }}
      - name: Get Code
        uses: actions/download-artifact@v3
        with:
          name: $ {{ inputs.artifact-name }}
        continue-on-error: true
      - name: List files
        run: ls
      - name: Output info
        run: echo "Deploying..."
      - name: Set result output
        id: set-result
        run: echo "step-result=success" >> $GITHUB_OUTPUT